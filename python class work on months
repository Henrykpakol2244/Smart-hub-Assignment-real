{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "153c1678-7b76-4071-a537-b2c228da8712",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter month: January\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31 days\n"
     ]
    }
   ],
   "source": [
    "month=input(\"Enter month:\"). title()\n",
    "if (month==\"January\"\n",
    "   or month ==\"March\"\n",
    "   or month ==\"May\"\n",
    "   or month ==\"July\"\n",
    "   or month ==\"August\"\n",
    "   or month ==\"October\"\n",
    "   or month ==\"December\"):\n",
    "   print(\"31 days\")\n",
    "elif month==\"February\":\n",
    "    print(\"28 days or 29 days\")\n",
    "else:\n",
    "    print (\"30 days\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b196ce26-c081-47ae-bc53-28cde2f69a3b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter month: 8\n"
     ]
    }
   ],
   "source": [
    "month=input(\"Enter month:\"). title()\n",
    "months_with_31_days={}"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "15504ca4-199a-4c98-93f2-be0175597911",
   "metadata": {},
   "source": [
    "## MENU"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b09d46a-8e28-4bbc-9f89-45a10d2706db",
   "metadata": {},
   "outputs": [],
   "source": [
    "menu =\"\"\"Menu:\n",
    "Garri and Soup (1200/plate)\n",
    "Jollof rice and Chicken(4500/plate)\"\"\"\n",
    "print(menu)\n",
    "price_of_rice=4500\n",
    "price_of_swallow=1200\n",
    "chioce_of_meal=input(\"choose 1 or 2:\")\n",
    "if chioce_of_meal==\"1\":\n",
    "    print(\"you chosed Garri and Soup\")\n",
    "else:\n",
    "    print(\"you chosed rice and chicken\")\n",
    "number_of_plates=int(input(\"Enter number of plates:))\n",
    "if choice_of_meal--\"1\":\n",
    "   total_cost = number_of_plates*price_of_swallow\n",
    "else:\n",
    "total_cost-=numbe_of_plates*price_of_rice\n",
    "print(f\"Total cost: {total_cost}\")\n",
    "if total_cost>=10000:\n",
    "    discount\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae436590-5d51-4328-a663-73fda4c180a0",
   "metadata": {},
   "source": [
    "## LOOPS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "ff744665-42b4-40d8-b2a0-626b329549e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list (range(4))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "7eefea85-22bb-4cc9-b8f9-553be2b46b33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name: Henry\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fine,you can come in\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name: for i in range (20):\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fine,you can come in\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name: for i in range (10):\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fine,you can come in\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name: \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fine,you can come in\n"
     ]
    },
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter your name: hghghjhuujyhkjojoikji\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "fine,you can come in\n"
     ]
    }
   ],
   "source": [
    "for i in range(5):\n",
    "    name = input(\"Enter your name:\").upper()\n",
    "    if name.strip().startswith(\"P\"):\n",
    "        print(\"you're not allowed in\")\n",
    "    else:\n",
    "        print(\"fine,you can come in\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "07a683c8-eb95-4c65-9e99-7e0c77afe562",
   "metadata": {},
   "source": [
    "## DISCOUNTED PRICE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c08b8b31-a3bb-4189-a25d-ad325ae6c3c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "price = [4.95,9.95,14.95,19.95,24.95]\n",
    "print (\"Price\\tDiscount\\tNew price\")\n",
    "for price in prices:\n",
    "    Discount = 0.6*price\n",
    "    new_prices= price-discount\n",
    "    print(f\"{round(price,2)}\\t{round(discount,2)}\\t{round})"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
