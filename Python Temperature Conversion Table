{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3d858daa-9f5e-4d3d-b558-820ec8d88f65",
   "metadata": {},
   "outputs": [],
   "source": [
    "## QUESTION 63: ASSIGNT. TEMPERATURE CONVERSION TABLE "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "308f0091-533a-4484-bfae-7fac6d80a76f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Degree celsius\tDegree Fahrenteit\n",
      "------------------------------\n",
      "0\t\t32.0\n",
      "10\t\t50.0\n",
      "20\t\t68.0\n",
      "30\t\t86.0\n",
      "40\t\t104.0\n",
      "50\t\t122.0\n",
      "60\t\t140.0\n",
      "70\t\t158.0\n",
      "80\t\t176.0\n",
      "90\t\t194.0\n",
      "100\t\t212.0\n"
     ]
    }
   ],
   "source": [
    "print(\"Degree celsius\\tDegree Fahrenteit\")\n",
    "print(\"-\"* 30)\n",
    "for c in range(0,101,10):\n",
    "    f = round((c*9/5)+32,2)\n",
    "    print(f\"{c}\\t\\t{f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "7a605865-9dfa-40e9-b930-e6de79c960d2",
   "metadata": {},
   "outputs": [
    {
     "ename": "IndentationError",
     "evalue": "unexpected indent (525429659.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[10], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    print(age>=3:)\u001b[0m\n\u001b[1;37m    ^\u001b[0m\n\u001b[1;31mIndentationError\u001b[0m\u001b[1;31m:\u001b[0m unexpected indent\n"
     ]
    }
   ],
   "source": [
    "choice =0\n",
    "while true:\n",
    "    Age=int(input(\"Enter your age\"))\n",
    "    if age<=0:\n",
    "       break\n",
    "    if age<=2:\n",
    "       charge=0\n",
    "       choice=choice + 0\n",
    "elif   age>2 and Age<13:\n",
    "       charge =14\n",
    "       choice =choice + charge\n",
    "elif   Age>=65:\n",
    "       charge=18\n",
    "       choice = choice +     \n",
    "       "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "62ee8c71-14b7-45cb-9849-03b1e691a1dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "## FUNCTION"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "3932858f-f630-4cec-b7b6-477f331e8a7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add(x,y):# x and y are parameters\n",
    "    result = x+y\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "15fa603f-1e39-4e53-9acd-bb2c22d20724",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "18"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add (6,12)# 6 and 12 are arguments"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed3eb087-d529-47a3-b0b5-5dcdfa22f6ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "def product(x,y and z):# 7,8 and 10 are parameters\n",
    "    result = x*y*z\n",
    "    return result \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "022bb3a3-51b9-41f6-8030-19abd0d20157",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
